package com.examples.helloandroid;

import java.lang.Thread;
import java.lang.InterruptedException;

import android.app.Activity;
import android.os.Bundle;
import android.view.View;
import android.view.MotionEvent;
import android.widget.TextView;

public class HelloAndroid extends Activity
{
    public final float maxAcceptedSpeed = 8.0f;

    protected float frictionLevel = 0;
    protected int climaxLevel = 0;

    protected TextView climaxGauge;

    public float normalizedSpeed(float speed) {
        float resultingSpeed = (maxAcceptedSpeed - speed) * (100f / maxAcceptedSpeed);
        if (resultingSpeed < 0f) {
            resultingSpeed = 0f;
        } else if (resultingSpeed > 100f) {
            resultingSpeed = 100f;
        }

        return resultingSpeed;
    }

    public int computeClimaxIncrement(float normalizedSpeed) {
        int resultingIncrement = 0;
        if (normalizedSpeed <= 10f || normalizedSpeed >= 90f) {
            resultingIncrement = -2;
        } else if (normalizedSpeed <= 20f || normalizedSpeed >= 80f) {
            resultingIncrement = -1;
        } else if (normalizedSpeed <= 40f || normalizedSpeed >= 60f) {
            resultingIncrement = 0;
        } else {
            resultingIncrement = 1;
        }
        climaxGauge.setText(climaxGauge.getText() + Integer.toString(resultingIncrement));
        return resultingIncrement;
    }

    public void incrementClimax(int incrementValue) {
        climaxLevel += incrementValue;
        if (climaxLevel < 0) {
            climaxLevel = 0;
        } else if (climaxLevel > 100) {
            climaxLevel = 100;
        }
    }

    public void updateClimaxGauge() {
        climaxGauge.setText("Climax = " + Integer.toString(climaxLevel));
    }

    public void processClimaxUpdate(float speedApplied) {
        float normSpeed = normalizedSpeed(speedApplied);
        int climaxInc = computeClimaxIncrement(normSpeed);
        incrementClimax(climaxInc);
        updateClimaxGauge();
    }

    /** Called when the activity is first created. */
    @Override
    public void onCreate(Bundle savedInstanceState)
    {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.main);

	    /*final TextView textoDestino = (TextView) findViewById(R.id.textoDestino);

	    final TextView texto = (TextView) findViewById(R.id.texto);
	
	    texto.setOnClickListener(new View.OnClickListener() {
		    public void onClick(View v) {
			    textoDestino.setText("Clicou!!!");
		    }
	    });

	    texto.setOnTouchListener(new View.OnTouchListener() {
		    public boolean onTouch(View v, MotionEvent event) {
			    textoDestino.setText(Integer.toString(event.getAction()));
			    return true;
		    }
	    });*/

	    final TextView texto = (TextView) findViewById(R.id.texto);

        climaxGauge = (TextView) findViewById(R.id.climaxGauge);

	    texto.setOnTouchListener(new View.OnTouchListener() {
		    public boolean onTouch(View v, MotionEvent event) {
			    float currTime = System.currentTimeMillis();
			    float currY = event.getY();
			    float threshold = 2.5f;

			    float speed = 0;
			    final int historySize = event.getHistorySize();
			    for (int h = 0; h < historySize; h++) {
				    //texto.setText(
					    //texto.getText() + "h=" + Integer.toString(h) + "/" +
					    //Float.toString(event.getHistoricalEventTime(h))
					    //"x=" + Float.toString(event.getHistoricalX(h)) + "/" +
					    //"y=" + Float.toString(event.getHistoricalY(h)) + "; "
				    //);
				    speed = (currY - event.getHistoricalY(h)) / 
					    (currY - event.getHistoricalEventTime(h));
				    speed = speed * 1000000;
				    if (speed < 0) speed *= -1;

				    texto.setText("Friction = " + Float.toString(speed));

                    processClimaxUpdate(speed);

				    //if (speed > threshold) {
					//    texto.setBackgroundColor(0xffff0000);
				    //} else {
					//    texto.setBackgroundColor(0xff00ff00);
				    //}

			    }

			    return true;
		    }
	    });

        new Thread(
            new Runnable() {
                public void run() {
                    try {
                        while(true) {                        
                            Thread.sleep(500);
                            texto.post(new Runnable() {
                                public void run() {
                                    incrementClimax(-1);
                                    updateClimaxGauge();
                                }
                            });  
                        }
                    } 
                    catch (Exception ex) {

                    }  
                }
            }
        ).start();
    }
}
